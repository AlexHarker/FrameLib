name: pd-github
on: push
jobs:
  pd-build-mac:
    runs-on: macos-latest
    steps:
      - name: Checkout main repo
        uses: actions/checkout@v3
        with:
          path: "framelib"
      - name: Build mac pd binary
        run: | 
             cd framelib/FrameLib_PD_Objects/
             make
      - name: Upload mac build
        uses: actions/upload-artifact@v3
        with:
          name: build-mac
          path: framelib/FrameLib_PD_Objects/framelib_pd.d_fat
  pd-build-linux:
    runs-on: ubuntu-latest
#    strategy: 
#        matrix:
#            architectures: [ i686, x86_64, arm, aarch64]
    steps:
      - name: Checkout main repo
        uses: actions/checkout@v3
        with:
          path: "framelib"
      - name: Build linux pd binary
        run: |
             cd framelib/FrameLib_PD_Objects/
             make
      - name: Upload linux build
        uses: actions/upload-artifact@v3
        with:
          name: build-linux
          path: framelib/FrameLib_PD_Objects/framelib_pd.pd_linux
  pd-build-win:
    runs-on: windows-2019
    steps:
      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64
      - name: Checkout main repo
        uses: actions/checkout@v3
        with:
          path: "framelib"
      - name: Build win pd binary
        shell: bash
#https://msp.puredata.info/Software/pd-0.52-2-i386.msw.zip
        run: |
             cd framelib/FrameLib_PD_Objects/
             curl https://msp.puredata.info/Software/pd-0.52-2.msw.zip --output pdzipped.zip
             unzip pdzipped.zip -d ../../
             make
      - name: Upload win build
        uses: actions/upload-artifact@v3
        with:
          name: build-win
          path: framelib/FrameLib_PD_Objects/framelib_pd.dll
  deploy-pd:
    runs-on: macos-latest
    #needs: [ pd-build-mac, pd-build-linux,  pd-build-win ]
    steps:
      - name: Get current date / make build folder
        id: date
        run: | 
             echo "::set-output name=date::$(date +'%Y-%m-%d')"
             mkdir build
      - name: Download builds
        uses: actions/download-artifact@v3
        with:
          path: build/
      - name: Prepare local actions
        uses: actions/checkout@v1
      - name: Sign and notarize
        uses: ./.github/actions/mac-notarization
        with:
          glob: '-e d_fat'
          folder: 'build/'
          team_id: ${{ secrets.TEAM_ID }}
          apple_id: ${{ secrets.APPLE_ID }}
          app_specific_pwd: ${{ secrets.APP_SPECIFIC_PWD }}
          cert_pwd: ${{ secrets.CERT_PWD }}
          cert_base64: ${{ secrets.CERT_BASE64}}    
      - name: Zip files
        run: find . -type f -maxdepth 1 -execdir zip '{}.zip' '{}' \;
      - name: Make release
        uses: "softprops/action-gh-release@v1"
        with:
          prerelease: true
          fail_on_unmatched_files: true
          files: build/*/*.zip
          target_commitish: ${{ github.sha }}
          tag_name: pd-latest-${{ steps.date.outputs.date }}
          body: This is an automated build of FrameLib for pd.
          generate_release_notes: true
