<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_tut.xsl" type="text/xsl"?>

<chapter name="FrameLib Tutorial 3: Key Concepts">
	<next name="04_fl_conversion">Conversion</next>
	<parent name="00_fl_index">FrameLib tutorials</parent>

<h1>
	FrameLib: Key Concepts
</h1>
	<h2>
		Schedulers and Timing
	</h2>
		<p>
			The most important concepts to understand in FrameLib:
			<br></br>
			<br></br>
			1. EVERYTHING is strongly timed.
			<br></br>
			2. NOTHING happens without a FrameLib timing source otherwise known as a 'scheduler'.
			<br></br>
			<br></br>

			Schedulers create trigger frames - think of them like the bang of FrameLib. Under the hood, a trigger frame is just an empty or zero length frame that contains no samples. Frames containing samples can also act as trigger frames, but these won't exist until you've used a scheduler somewhere in the network.
		</p>

	<h2>
		Parameters and Tagging
	</h2>
		<p>
			FrameLib objects have a unique system for managing parameters at instantiation and with real-time control. It is is not dissimilar to max messages but there are some differences.

			There are two ways to assign parameters to a FrameLib object at load time. Like many Max objects you can input values in the order of the arguments you want to address. Additionally you can directly address parameters through the "/parameter [value]" syntax. This is similar to the "@attribute" system in Max, however FrameLib objects cannot be addressed through the 'attrui' object. The /parameter syntax is a more direct way of addressing each parameter and is particularly useful in two scenarios.
			<br></br>
			<br></br>
			1. The default parameters are useful apart from one specific parameter you would like to change.
			<br></br>
			2. Making parameter configurations explicit and easy to read.
			<br></br>
			<br></br>

			Real-time control is managed through a 'parameter update' inlet which receives special 'tagged frames'. Because frames are used to change the parameters, the configuration of the object is tightly synchronised to the network. More details can be found in the corresponding tabs above.
		</p>
	<h2>
		How to Get Help
	</h2>
		<p>
			Like all Max objects there are help files that can be accessed for reference. You can also send FrameLib objects some reserved messages which post extra information to the max console.

			<bullet> info: Prints all information to max console </bullet>
			<bullet> info description: Prints the description </bullet>
			<bullet> info inputs: Prints information about the inputs </bullet>
			<bullet> info outputs: Prints information about the outputs </bullet>
			<bullet> info io: Prints info on inputs and outputs </bullet>
			<bullet> info parameters: Prints parameters for the object </bullet>
			<bullet> info quick: Provides a quick summary </bullet>
		</p>
</chapter>

