<c74object category="FrameLib Spectral" module="FrameLib" name="fl.window~">
  <digest> 
        Multiplies the input frame by a specified window.
    </digest>
  <description> 
         The output length will match the input length. The window can either be recalculated to match the incoming length or interpolated. Gain compensation can be applied using the compensate parameter. The included endpoints are controllable so as to fit different applications.
    </description>
  <misc name="Parameters">
    <entry name="1. /window [enum]">
      <description> 
                Sets the window type:<br/><br/>rectangle - a window of equal values.<br/>triangle - a triangular window.<br/>trapezoid - an adjustable trapezoid window.<br/>welch - the Welch polynomial window.<br/>parzen - the Parzen polynomial window.<br/>tukey - the adjustable Tukey (or cosine-tapered) window.<br/>sine - the sine (or cosine) window.<br/>hann - the Hann window.<br/>hamming - the Hamming window with a0 = 0.54 and a1 = 0.46.<br/>blackman - the Blackman window with a0 = 0.42, a1 = 0.50, and a2 = 0.08.<br/>exact_blackman - the exact Blackman window as outlined in the literature.<br/>The coefficients are a0 = 7938/18608, a1 = 9240/18608 and a2 = 1430/18608.<br/>blackman_harris - the Blackman-Harris window with 92dB rejection.<br/>nuttall_continuous - Nuttalls continuous 1st derivative window with 93dB rejection.<br/>nuttall_minimal - Nuttalls minimal sidelobe window with 98dB rejection.<br/>flat_top - Heinzels flat-top window with 95dB rejection.<br/>cosine_sum - a sum of cosines as set by the parameters.<br/>kaiser - an kaiser window adjustable via the beta parameter.<br/>sine_taper - one of the sine tapers selectable by parameter.<br />
        <bullet>[0] - rectangle</bullet>
        <bullet>[1] - triangle</bullet>
        <bullet>[2] - trapezoid</bullet>
        <bullet>[3] - welch</bullet>
        <bullet>[4] - parzen</bullet>
        <bullet>[5] - tukey</bullet>
        <bullet>[6] - sine</bullet>
        <bullet>[7] - hann</bullet>
        <bullet>[8] - hamming</bullet>
        <bullet>[9] - blackman</bullet>
        <bullet>[10] - exact_blackman</bullet>
        <bullet>[11] - blackman_harris</bullet>
        <bullet>[12] - nuttall_continuous</bullet>
        <bullet>[13] - nuttall_minimal</bullet>
        <bullet>[14] - flat_top</bullet>
        <bullet>[15] - cosine_sum</bullet>
        <bullet>[16] - kaiser</bullet>
        <bullet>[17] - sine_taper</bullet>
      </description>
    </entry>
    <entry name="2. /size [double]">
      <description> 
                Sets the size of the internal window.<br/>If zero the window is matched to input length (best for frequency domain applications).<br/>Else the window is resampled by linear interpolation (best for granular applications).
            </description>
    </entry>
    <entry name="3. /exponent [double]">
      <description> 
                Sets an exponent that each value in the window should be raised to.
            </description>
    </entry>
    <entry name="4. /compensate [enum]">
      <description> 
                Sets the gain compensation (the window is divided by the compensated gain).<br/>off - no compensation is used.<br/>linear - compensate the linear gain of the window.<br/>square - compensate the gain of the window when applied twice (squared).<br/>reconstruct - compensate the gain of the squared window divided by the linear gain.<br/>This last mode is suited to FFT output windows used with the same input window.<br/>Note that the gain of the window is calculated after applying any exponent.<br />
        <bullet>[0] - off</bullet>
        <bullet>[1] - linear</bullet>
        <bullet>[2] - square</bullet>
        <bullet>[3] - reconstruct</bullet>
      </description>
    </entry>
    <entry name="5. /parameters [variable length double array]">
      <description> 
                An array that sets parameters specific to the window type:<br/><br/>trapezoid - takes either one or two parameter as percentages.<br/>If one parameter is provided it sets the first high point which is then mirrored.<br/>If two parameters are provided they set the two points of the trapezoid.<br/>The defaults are 25% and 75%.<br/>tukey - takes a single parameter to set the cosine percentage (defaults to 50%).<br/>When set to 100% the window is the same as the Hann window.<br/>Reducing the percentage increases the central plateau.<br/>cosine_sum - takes up to 5 parameters (a0-a4) as in the following formula.<br/>w(x) = a0 - a1 * cos(2&#960;x) + a2 * cos(4&#960;x) - a3 * cos(6&#960;x) + a4 * cos(8&#960;x).<br/>The defaults are set to the values for a Hann window.<br/>kaiser - takes a single parameter to set beta (defaults to 6.24).<br/>sine_taper - takes a single integer parameter to select the taper (defaults to 1).<br/>Other window types do not taken any parameters.
            </description>
    </entry>
    <entry name="6. /endpoints [enum]">
      <description> 
                Sets which endpoints of the window will be generated.<br/>For spectral applications a periodic window (first or last) is preferable.<br/>For granular or filter usage a symmetric window (both or none) is preferable.<br />
        <bullet>[0] - both</bullet>
        <bullet>[1] - first</bullet>
        <bullet>[2] - last</bullet>
        <bullet>[3] - none</bullet>
      </description>
    </entry>
  </misc>
  <metadatalist>
    <metadata name="author">Alex Harker</metadata>
    <metadata name="tag">FrameLib</metadata>
    <metadata name="tag">FrameLib Spectral</metadata>
  </metadatalist>
  <seealsolist>
    <seealso name="fl.fft~" />
    <seealso name="fl.multitaper~" />
    <seealso name="fl.convolve~" />
    <seealso name="fl.ifft~" />
    <seealso name="fl.correlate~" />
  </seealsolist>
  <misc name="Discussion">
    <entry name="Keywords">
      <description>FFT, windowing, frequency domain</description>
    </entry>
  </misc>
</c74object>
