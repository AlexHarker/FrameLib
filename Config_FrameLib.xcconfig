
// Xcode target configuration settings 

PRODUCT_NAME = $(TARGET_NAME)

// Paths

C74SUPPORT = $(SRCROOT)/../Max6_Support/c74support
HEADER_SEARCH_PATHS = /Developer/Headers/FlatCarbon "$(SRCROOT)/../../AH_MaxMSP_Headers" "$(C74SUPPORT)/max-includes" "$(C74SUPPORT)/msp-includes" "$(C74SUPPORT)/jit-includes"
FRAMEWORK_SEARCH_PATHS = "$(C74SUPPORT)/max-includes" "$(C74SUPPORT)/msp-includes" "$(C74SUPPORT)/jit-includes"

// Special Files

GCC_PREFIX_HEADER = $(C74SUPPORT)/max-includes/macho-prefix.pch
INFOPLIST_FILE = Info.plist

// Per architecture and deployment settings

GCC_VERSION = com.apple.compilers.llvm.clang.1_0
MACOSX_DEPLOYMENT_TARGET = 10.5
SDKROOT = macosx10.5

ARCHS = i386 x86_64 

GCC_PREPROCESSOR_DEFINITIONS = "DENORM_WANT_FIX = 1" "NO_TRANSLATION_SUPPORT = 1"

// Static Configuration (don't change these)

WRAPPER_EXTENSION = mxo
DEPLOYMENT_LOCATION = NO
GENERATE_PKGINFO_FILE = YES

// Turn off C99 to minimise time spent working in Visual Studio

WARNING_CFLAGS = -Wmost -Wno-four-char-constants -Wno-unknown-pragmas -Wdeclaration-after-statement -Wno-deprecated-declarations -Werror

// Allow old-style use of __inline (revise later)

OTHER_CFLAGS = -std=gnu89

// Flags to enforce some build-time checks for the symbols used while not actually performing a hard link

C74_SYM_LINKER_FLAGS = @$(C74SUPPORT)/max-includes/c74_linker_flags.txt

OTHER_LDFLAGS = $(C74_SYM_LINKER_FLAGS)

// hide all symbols by default
// mark a function to be exported with the C74_EXPORT macro -- most likely this will only apply to the main() function

OTHER_CFLAGS = -fvisibility=hidden