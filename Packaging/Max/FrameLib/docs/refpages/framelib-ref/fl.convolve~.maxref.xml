<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<?xml-stylesheet href='./_c74_ref.xsl' type='text/xsl'?>
<c74object name="fl.convolve~" module="FrameLib" category="FrameLib Spectral">
  <digest>
    Convolves two inputs (either real or complex)
  </digest>
  <description>
    The output length depends on the edges parameter, which sets the edge behaviour. Output length is M + N - 1 for linear convolution (M and N are the input lengths). For other edge behaviours the output length is the maximum of M and N. In complex mode pairs of inputs and outputs are used to represent complex values. If one of a pair of inputs is shorter than the other it is zero padded to match. Internal processing is FFT-based.
  </description>
  <misc name="Parameters">
    <entry name="/max_length [int]">
      <description>
        <h6><i>INSTANTIATION ONLY</i></h6>Sets the maximum processing length. The processing length is M + N - 1 where M and N are the lengths of the two inputs.
      </description>
    </entry>
    <entry name="/mode [enum]">
      <description>
        <h6><i>INSTANTIATION ONLY</i></h6>Sets the type of input and output.<br /><bullet>[0] - <m>real</m></bullet><bullet>[1] - <m>complex</m></bullet>
      </description>
    </entry>
    <entry name="/edges [enum]">
      <description>
        <h6><i>INSTANTIATION ONLY</i></h6>Sets the edge behaviour of the convolution process. The basic operation is a linear one with output of the processing length. For modes other than linear the output length is reduced to the maximum of M and N. Excess from the linear operation is added back into the available length as specified:<br /><bullet>[0] - <m>linear</m> - the output is the full processing length with no further processing.</bullet><bullet>[1] - <m>circular</m> - excess at the end is added back to the beginning of the output.</bullet><bullet>[2] - <m>wrap</m> - as circular mode but rotated such that wrapping occurs equally at both ends.</bullet><bullet>[3] - <m>fold</m> - as wrap but folding not wrapping at the edges (edge values are not repeated).</bullet><bullet>[4] - <m>mirror</m> - as fold but with repeated edge values.</bullet>
      </description>
    </entry>
  </misc>
  <metadatalist>
    <metadata name="author">Alex Harker</metadata>
    <metadata name="tag">FrameLib</metadata>
    <metadata name="tag">FrameLib Spectral</metadata>
  </metadatalist>
  <objarglist>
    <objarg name="max_length" optional="1" type="int">
      <digest>
        Sets the maximum processing length
      </digest>
      <description>
        This argument sets the max_length parameter:<br /><br />Sets the maximum processing length. The processing length is M + N - 1 where M and N are the lengths of the two inputs.
      </description>
    </objarg>
    <objarg name="mode" optional="1" type="symbol">
      <digest>
        Sets the type of input and output
      </digest>
      <description>
        This argument sets the mode parameter:<br /><br />Sets the type of input and output.<br /><bullet>[0] - <m>real</m></bullet><bullet>[1] - <m>complex</m></bullet>
      </description>
    </objarg>
    <objarg name="edges" optional="1" type="symbol">
      <digest>
        Sets the edge behaviour of the convolution process
      </digest>
      <description>
        This argument sets the edges parameter:<br /><br />Sets the edge behaviour of the convolution process. The basic operation is a linear one with output of the processing length. For modes other than linear the output length is reduced to the maximum of M and N. Excess from the linear operation is added back into the available length as specified:<br /><bullet>[0] - <m>linear</m> - the output is the full processing length with no further processing.</bullet><bullet>[1] - <m>circular</m> - excess at the end is added back to the beginning of the output.</bullet><bullet>[2] - <m>wrap</m> - as circular mode but rotated such that wrapping occurs equally at both ends.</bullet><bullet>[3] - <m>fold</m> - as wrap but folding not wrapping at the edges (edge values are not repeated).</bullet><bullet>[4] - <m>mirror</m> - as fold but with repeated edge values.</bullet>
      </description>
    </objarg>
  </objarglist>
  <methodlist>
    <method name="info">
      <arglist>
        <arg name="items" optional="1" type="list" />
      </arglist>
      <digest>
        Get Object Info
      </digest>
      <description>
        Print info about <o>fl.convolve~</o> to the max window for reference purposes. If no arguments are provided then all information is posted to the Max window. Else a set of flags is used to select which sections of the reference to display, and whether or not the information should be provided in a shortened form.<br /> <br />The following flags are available:<br /><br /><bullet><m>description</m> - display the object description.</bullet><bullet><m>inputs</m> - display info on inputs.</bullet><bullet><m>outputs</m> - display info on outputs.</bullet><bullet><m>io</m> - display info on both inputs and outputs.</bullet><bullet><m>parameters</m> - display info on the object parameters.</bullet><bullet><m>quick</m> - display shorten versions of any info displayed.</bullet>
      </description>
    </method>
    <method name="frame">
      <arglist />
      <digest>
        Connect FrameLib objects
      </digest>
      <description>
        Used internally by FrameLib's connection routines. User messages have no effect.
      </description>
    </method>
    <method name="sync">
      <arglist />
      <digest>
        Synchronise FrameLib audio objects
      </digest>
      <description>
        Used internally by FrameLib's connection routines. User messages have no effect.
      </description>
    </method>
  </methodlist>
  <attributelist>
    <attribute name="rt" get="1" set="1" type="int" size="1">
      <digest>
        Realtime flag
      </digest>
      <description>
        Sets the realtime state for <o>fl.convolve~</o>. When set to <m>0</m> <o>fl.convolve~</o> forms part of a non-realtime network for performing offline processing in Max message threads. This mode of operation uses <o>buffer~</o> objects for audio IO.<br /><br />More info on non-realtime processing with FrameLib can be found in <link name="11_fl_nrt" module="framelib" type="tutorial">Tutorial 11</link>.
      </description>
      <attributelist>
        <attribute name="basic" get="1" set="1" type="int" size="1" value="1" />
        <attribute name="label" get="1" set="1" type="symbol" size="1" value="Realtime" />
      </attributelist>
    </attribute>
    <attribute name="id" get="1" set="1" type="symbol" size="1">
      <digest>
        Context ID
      </digest>
      <description>
        Sets the context name for <o>fl.convolve~</o> in order to determine distinct processing contexts.<br /><br />More info on FrameLib contexts can be found in <link name="10_fl_contexts" module="framelib" type="tutorial">Tutorial 10</link>.
      </description>
      <attributelist>
        <attribute name="basic" get="1" set="1" type="int" size="1" value="1" />
        <attribute name="label" get="1" set="1" type="symbol" size="1" value="ID" />
      </attributelist>
    </attribute>
  </attributelist>
  <seealsolist>
    <seealso name="fl.fft~" />
    <seealso name="fl.multitaper~" />
    <seealso name="fl.ifft~" />
    <seealso name="fl.correlate~" />
    <seealso name="fl.window~" />
  </seealsolist>
  <misc name="Discussion">
    <entry name="Keywords">
      <description>FFT, windowing, frequency domain</description>
    </entry>
  </misc>
</c74object>
